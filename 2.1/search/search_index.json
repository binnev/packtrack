{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Packtrack","text":"<p>A simple CLI for tracking mail packages. See the documentation</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>Create your urls file in your home directory: </p> <pre><code>touch ~/packtrack.urls\n</code></pre> <p>Add urls you want to track</p> <pre><code>packtrack url add https://my.dhlecommerce.nl/home/tracktrace/ABCD1\n</code></pre> <p>(Optional) configure your default postcode (this is used to get more info from the carrier)</p> <pre><code>packtrack config set postcode 1234\n</code></pre> <p>Run packtrack to track all the urls:  <pre><code>\u276f packtrack \n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Tue 25 Mar 13:04] DHL Package ABCD1\n[Tue 15 Apr 12:49] DHL Package ABCD2 from Coolblue to Packtrack User\n[Fri 02 May 10:53] PostNL Package ABCD3 from Zalando to Packtrack User\n[Mon 12 May 10:09] DHL Package ABCD4 from Packtrack User to Coolblue\n[Sat 19 Jul 13:39] DHL Package ABCD5 from bol.com to Packtrack User\n[Tue 22 Jul 11:58] PostNL Package ABCD6\n[Thu 14 Aug 11:45] PostNL Package ABCD7 from Packtrack User to Zalando\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre></p> <p>filter by carrier: </p> <pre><code>\u276f packtrack --carrier dhl\n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Tue 25 Mar 13:04] DHL Package ABCD1\n[Tue 15 Apr 12:49] DHL Package ABCD2 from Coolblue to Packtrack User\n[Mon 12 May 10:09] DHL Package ABCD4 from Packtrack User to Coolblue\n[Sat 19 Jul 13:39] DHL Package ABCD5 from bol.com to Packtrack User\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre> <p>...or sender:  <pre><code>\u276f packtrack --sender coolblue\n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Tue 15 Apr 12:49] DHL Package ABCD2 from Coolblue to Packtrack User\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre></p> <p>Consult the help for more options: </p> <pre><code>\u276f packtrack -h\nA simple CLI for tracking mail packages\n\nUsage: packtrack [OPTIONS] [URL] [COMMAND]\n\nCommands:\nurl     URL management\nconfig  Configuration\nhelp    Print this message or the help of the given subcommand(s)\n\nArguments:\n[URL]  Either a new URL, or a fragment of an existing URL\n\nOptions:\n-v, --verbosity...                   Set verbosity. `-v` = 1, `-vvv` = 3\n-c, --cache-seconds &lt;CACHE_SECONDS&gt;  Max age for cache entries to be reused\n    --sender &lt;SENDER&gt;                Filter by sender\n    --carrier &lt;CARRIER&gt;              Filter by postal carrier\n    --recipient &lt;RECIPIENT&gt;          Filter by recipient\n-h, --help                           Print help\n-V, --version                        Print version\n</code></pre>"},{"location":"dev-docs/dependencies/","title":"Dependencies","text":"<p>Use <code>cargo</code> -- Rust's dependency manager (amongst other things).</p> <p>Add a dependency:  <pre><code>cargo add serde\n</code></pre></p> <p>Add a dev dependency: <pre><code>cargo add pretty_assertions --dev\n</code></pre></p> <p>Upgrade pinned dependency versions: <pre><code>cargo update\n</code></pre></p> <p>Install dependencies: <pre><code>cargo build\n</code></pre></p>"},{"location":"dev-docs/docs/","title":"Docs","text":""},{"location":"dev-docs/docs/#view-the-documentation-locally","title":"View the documentation locally:","text":""},{"location":"dev-docs/docs/#mkdocs","title":"Mkdocs","text":"<p>To view the mkdocs site, run:  <pre><code>mkdocs serve\n</code></pre> and go to <code>localhost:8000</code> to view the docs. Mkdocs hot-reloads the docs, so any changes you make will be immediately visible.</p> <p>Unfortunately, there is currently no <code>mkdocstrings</code> plugin available for Rust, which means we can't easily include docstrings from the code in the docs site. Instead, we use <code>cargo doc</code> to generate separate reference docs from the docstrings in the code.</p> <p><pre><code>cargo watch -x \"doc --no-deps\"\n</code></pre> (You will need to manually refresh the browser for your changes to be reflected)</p>"},{"location":"dev-docs/docs/#versioning","title":"Versioning","text":"<p>We use <code>mike</code> to manage versioning for our documentation. It creates a snapshot of the documentation for each version of the project, allowing users to access the appropriate docs for the version they're using\u2014even if it's an older one.</p>"},{"location":"dev-docs/docs/#build-new-docs-version","title":"Build new docs version","text":"<p>Build the docs for the current project version:  <pre><code>mike deploy $(cz version --project) latest --update-aliases\n</code></pre></p> <p>To push your new docs version:  <pre><code>mike deploy $(cz version --project) latest --update-aliases --push\n</code></pre></p> <p>The first time you use Mike, you'll need to tell it which version is the default (the one it shows when you load the docs main page). We'll set it to the \"default\" alias: <pre><code>mike set-default latest\n</code></pre></p> <p>To list the available docs versions:  <pre><code>mike list \n</code></pre></p> <p>To view the versioned docs locally (with a drop-down to select which docs version you want):  <pre><code>mike serve \n</code></pre></p>"},{"location":"dev-docs/docs/#writing","title":"Writing","text":"<p>These are some tools you can use to enrich the documentation. </p>"},{"location":"dev-docs/docs/#diagrams","title":"Diagrams","text":"<p>Mermaid diagrams can be written in a <code>mermaid</code> code block, and they will be rendered as diagrams: </p> <p>Graphs:  <pre><code>graph LR\n    hello --&gt; world\n    world --&gt; again\n    again --&gt; hello</code></pre></p> <p>Sequence diagrams:  <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre></p> <p>Class diagrams: <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre></p>"},{"location":"dev-docs/docs/#tooltips","title":"Tooltips","text":"<p>Tooltips and other such \"admonitions\" can be written with a <code>!!!</code> block: <pre><code>!!! note\n    This is a note.\n</code></pre></p> <p>Note</p> <p>This is a note.</p> <p>Tip</p> <p>This is a tip.</p> <p>Warning</p> <p>Be careful!</p> <p>Danger</p> <p>This is dangerous!</p>"},{"location":"dev-docs/docs/#code-blocks","title":"Code blocks","text":"<p>Specify python with the \"py\" shortcode after the 3 backticks. You can highlight lines too with <code>hl_lines=\"3-5\"</code></p> <pre><code>/// Divides the first number by the second and returns the result.\n///\n/// # Panics\n///\n/// Panics if the second number is zero.\n///\n/// # Examples\n///\n/// ```\n/// let result = rust_template::divide(6.0, 3.0);\n/// assert_eq!(result, 2.0);\n/// ```\npub fn divide(a: f64, b: f64) -&gt; f64 {\n    if b == 0.0 {\n        panic!(\"Cannot divide by zero\");\n    }\n    a / b\n}\n</code></pre> <p>Inline code blocks can be highlighted for specific languages by prefixing <code>#!python</code>: <code>lambda a: print(a)</code></p>"},{"location":"dev-docs/docs/#content-tabs","title":"Content tabs","text":"<p>Content tabs can be used to show different versions of something in a tabbed layout:</p> CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <p>It doesn't have to be code: </p> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol>"},{"location":"dev-docs/getting-started/","title":"Getting Started","text":"<p>This tutorial will guide you through setting up and running the Python Template project.</p> nix + direnvmanual <p>This project is intended to be used with nix and direnv. If you have these tools set up, simply opening a terminal in the project folder will perform all the necessary setup steps for you, including installing dependencies and pre-commit hooks :) </p> <p>If you are not using nix and direnv, follow these steps to setup the project</p>"},{"location":"dev-docs/getting-started/#steps","title":"Steps","text":"<ol> <li>Clone the repository: <pre><code>git clone &lt;repository-url&gt;\ncd rust-template\n</code></pre></li> </ol>"},{"location":"dev-docs/getting-started/#steps_1","title":"Steps","text":"<ol> <li> <p>Clone the repository: <pre><code>git clone &lt;repository-url&gt;\ncd rust-template\n</code></pre></p> </li> <li> <p>Create a virtual environment (for the python helper tools):  <pre><code>uv venv\nsource .venv/bin/activate\n</code></pre></p> </li> <li> <p>Install python helper dependencies: <pre><code>uv pip install -r pyproject.toml --all-extras\n</code></pre></p> </li> <li> <p>Install pre-commit hooks: <pre><code>pre-commit install\n</code></pre></p> </li> <li> <p>Install rust dependencies:  <pre><code>cargo build \n</code></pre></p> </li> </ol>"},{"location":"dev-docs/testing/","title":"Testing","text":""},{"location":"dev-docs/testing/#run-all-tests","title":"Run all tests","text":"<p>Running all tests should be as simple as this: <pre><code>cargo test\n</code></pre></p>"},{"location":"dev-docs/testing/#run-specific-tests","title":"Run specific tests","text":"<p>Run only tests which have \"multiply\" in the file or function name:  <pre><code>cargo test multiply\n</code></pre></p>"},{"location":"dev-docs/testing/#watch-tests","title":"Watch tests","text":"<p>To automatically re-run tests while you are working on them, use  <code>pytest-watcher</code> (<code>q</code> to quit): <pre><code>cargo watch -x test\n</code></pre></p> <p>You can also watch specific tests using the <code>-k</code> flag:  <pre><code>cargo watch -x \"test multiply\"\n</code></pre></p> <p>By default, tests are re-run 0.5 seconds after the last file edit. To increase the delay, pass <code>--delay</code>:  <pre><code>cargo watch -x \"test multiply\" --delay 1\n</code></pre></p>"},{"location":"dev-docs/testing/#getting-test-coverage","title":"Getting test coverage","text":"<p>TODO</p>"},{"location":"dev-docs/versioning/","title":"Versioning","text":"<p>Use commitizen to automatically calculate version increments, based on Conventional Commit Messages and Semantic Versioning <pre><code>cz bump\n</code></pre></p>"},{"location":"explanation/aim/","title":"Aim","text":"<p><code>packtrack</code> aims to provide a simple CLI for tracking multiple packages in the mail.</p>"},{"location":"how-to/tracking/","title":"Tracking","text":""},{"location":"how-to/tracking/#track-all-urls","title":"Track all URLs","text":"<p>To track all the URLs in your URLs file and receive a summary, simply run packtrack with no arguments: </p> <pre><code>\u276f packtrack \n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Tue 25 Mar 13:04] DHL Package ABCD1\n[Tue 15 Apr 12:49] DHL Package ABCD2 from Coolblue to Packtrack User\n[Fri 02 May 10:53] PostNL Package ABCD3 from Zalando to Packtrack User\n[Mon 12 May 10:09] DHL Package ABCD4 from Packtrack User to Coolblue\n[Sat 19 Jul 13:39] DHL Package ABCD5 from bol.com to Packtrack User\n[Tue 22 Jul 11:58] PostNL Package ABCD6\n[Thu 14 Aug 11:45] PostNL Package ABCD7 from Packtrack User to Zalando\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre>"},{"location":"how-to/tracking/#track-a-specific-url","title":"Track a specific URL","text":"<p>You can also filter for URLs that contain a given string. The package's barcode or tracking code often works here, because it is usually in the URL.</p> <pre><code>\u276f packtrack ABCD5\n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Sat 19 Jul 13:39] DHL Package ABCD5 from bol.com to Packtrack User\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre> <p>You can also pass a whole new URL. If packtrack can't find the string in your URLs file, it will assume it is a new URL and track it: </p> <pre><code>\u276f packtrack https://my.dhlecommerce.nl/home/tracktrace/ABCD8\n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Sat 19 Jul 13:39] DHL Package ABCD8 from Amazon to Packtrack User\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre> <p>By default, delivered packages are shown as a one-liner. In-transit packages are shown in more detail, with events and ETA from the carrier. </p>"},{"location":"how-to/tracking/#filter-by-carrier","title":"Filter by carrier","text":"<p>Filter for packages carried by PostNL:  <pre><code>\u276f packtrack --carrier postnl\n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Tue 22 Jul 11:58] PostNL Package ABCD6\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\nPostNL Package ABCD3 from Zalando to Packtrack User\nevents:\n    [Today 12:16] Pre-alerted shipment enriched by PostNL management.\n    [Today 12:16] Shipment expected, but not yet arrived or processed at PostNL\n    [Today 12:16] Delivery can be changed\n    [Today 19:35] Shipment received by PostNL\n    [Today 19:37] Delivery can be changed\n\n--------------------------------------------------------------------------------\nPostNL Package ABCD7 from Packtrack User to Zalando\nevents:\n    [Today 11:12] Pre-alerted shipment enriched by PostNL management.\n    [Today 11:12] Shipment expected, but not yet arrived or processed at PostNL\n    [Today 11:12] Delivery can be changed\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre></p> <p>Note</p> <p>Filters do a partial string match, so <code>packtrack --carrier post</code> will also match PostNL. This goes for all the filters.</p>"},{"location":"how-to/tracking/#filter-by-sender","title":"Filter by sender","text":"<p>Filter for packages sent by Coolblue: <pre><code>\u276f packtrack --sender coolblue\n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Tue 15 Apr 12:49] DHL Package ABCD2 from Coolblue to Packtrack User\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre></p>"},{"location":"how-to/tracking/#filter-by-recipient","title":"Filter by recipient","text":"<p>Filter for packages sent to Coolblue:  <pre><code>\u276f packtrack --recipient coolblue \n================================================================================\n                            D E L I V E R E D                                \n================================================================================\n[Mon 12 May 10:09] DHL Package ABCD4 from Packtrack User to Coolblue\n================================================================================\n                            I N T R A N S I T                                \n================================================================================\n\n================================================================================\n                                E R R O R S                                   \n================================================================================\n</code></pre></p>"},{"location":"how-to/tracking/#caching","title":"Caching","text":"<p>To speed things up, packtrack reuses cached responses where possible. Undelivered packages are loaded from the cache if the cache entry is less than 30s old. This time window is called the \"cache lifetime\". To override this value, use the <code>-c</code> flag to pass a new cache lifetime in seconds. </p> <p>This will reuse cache entries from the past 10 minutes: <pre><code>packtrack -c 600\n</code></pre></p> <p>This will force packtrack to always fetch a fresh value:  <pre><code>packtrack -c 0 \n</code></pre></p> <p>Delivered packages are always loaded from the cache, because they are unlikely to change. </p>"},{"location":"how-to/urls/","title":"URL management","text":""},{"location":"how-to/urls/#add-a-url","title":"Add a URL","text":"<pre><code>\u276f packtrack url add example.com/barcode/1234\nAdded example.com/barcode/1234\n</code></pre>"},{"location":"how-to/urls/#remove-a-url","title":"Remove a URL","text":"<pre><code>\u276f packtrack url remove example.com/barcode/1234\nRemoved urls:\nexample.com/barcode/1234\n</code></pre> <p>Note</p> <p>Packtrack does a partial match here, so you can pass a fragment of the URL you want to remove (the package barcode is usually good for this).</p> <p>If there are multiple partial matches, they will all be removed from the urls file. </p> <pre><code>\u276f packtrack url remove 1234\nRemoved urls:\nexample.com/barcode/1234\n</code></pre>"},{"location":"how-to/urls/#view-the-list-of-tracked-urls","title":"View the list of tracked URLs","text":"<pre><code>\u276f packtrack url list \nhttps://my.dhlecommerce.nl/home/tracktrace/JVGLOTC0065912345/\nhttps://my.dhlecommerce.nl/home/tracktrace/CF56620412345/1234AB\nhttps://jouw.postnl.nl/track-and-trace/3SFJSY998812345-NL-1234AB\nhttps://jouw.postnl.nl/track-and-trace/3SPTBD402412345-NL-1234AB?language=nl\nhttps://jouw.postnl.nl/track-and-trace/3SYZRF007412345-NL-1234AB\nhttps://jouw.postnl.nl/track-and-trace/3SDMDN031112345-NL-1234AB\n</code></pre> <p>Note</p> <p>You can filter the urls:  <pre><code>\u276f packtrack url list dhl\nhttps://my.dhlecommerce.nl/home/tracktrace/JVGLOTC0065912345/\nhttps://my.dhlecommerce.nl/home/tracktrace/CF56620412345/1234AB    \n</code></pre></p>"},{"location":"ref/","title":"Reference","text":"<p>Link to your docs.rs page here.</p> <p>It is possible to put your docstrings in markdown files (like <code>add.md</code>, <code>multiply.md</code>, etc) and attach them to the code object they describe (see <code>lib.rs</code>). This allows you to have some kind of API reference in the mkdocs site, but it does make the code less readable. </p>"},{"location":"tutorials/installation/","title":"Installation","text":"<p>You'll need to install Cargo (Rust's package manager). After that, installing <code>packtrack</code> is simple:</p> <pre><code>cargo install packtrack \n</code></pre>"}]}